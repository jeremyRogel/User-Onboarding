{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyrogel/Documents/git/form-builder/src/components/Form.js\";\nimport React from 'react';\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nconst Forms = ({\n  values\n}) => {\n  return React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"text\",\n    name: \"password\",\n    palceholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Terms of Service\", React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"termsOfService\",\n    checked: values.termsOfService,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nconst FormikForm = withFormik({\n  mapPropsToValues({\n    name,\n    email,\n    password,\n    termsOfService\n  }) {\n    return {\n      name: name || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      termsOfService: termsOfService || false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"You must put a name, dude\"),\n    email: Yup.string().required(\"input that email, please!\"),\n    password: Yup.string().required(\"Come on! You need to put in a password\")\n  }),\n\n  handleSubmit(values, {}) {\n    axios.post(\" https://reqres.in/api/users\", values).then(res => {\n      console.log(res);\n    });\n  }\n\n})(Forms);\nconsole.log(\"This is the HOC\", FormikForm);\nexport default FormikForm;","map":{"version":3,"sources":["/Users/jeremyrogel/Documents/git/form-builder/src/components/Form.js"],"names":["React","withFormik","Form","Field","Yup","axios","Forms","values","termsOfService","FormikForm","mapPropsToValues","name","email","password","validationSchema","object","shape","string","required","handleSubmit","post","then","res","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,QAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACzB,SAEG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,WAAW,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,WAAW,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,WAAW,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,IAAI,EAAC,gBAFT;AAGI,IAAA,OAAO,EAAEA,MAAM,CAACC,cAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,CADD,CAFH;AAsBH,CAvBD;;AA0BI,MAAMC,UAAU,GAAGR,UAAU,CAAC;AAC1BS,EAAAA,gBAAgB,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBL,IAAAA;AAAzB,GAAD,EAA4C;AACxD,WAAO;AACHG,MAAAA,IAAI,EAAEA,IAAI,IAAI,EADX;AAEHC,MAAAA,KAAK,EAAEA,KAAK,IAAI,EAFb;AAGHC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EAHnB;AAIHL,MAAAA,cAAc,EAAEA,cAAc,IAAI;AAJ/B,KAAP;AAMH,GARyB;;AAS1BM,EAAAA,gBAAgB,EAAEV,GAAG,CAACW,MAAJ,GAAaC,KAAb,CAAmB;AACjCL,IAAAA,IAAI,EAAEP,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,2BAAtB,CAD2B;AAEjCN,IAAAA,KAAK,EAAER,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,2BAAtB,CAF0B;AAGjCL,IAAAA,QAAQ,EAACT,GAAG,CAACa,MAAJ,GAAaC,QAAb,CAAsB,wCAAtB;AAHwB,GAAnB,CATQ;;AAe1BC,EAAAA,YAAY,CAACZ,MAAD,EAAS,EAAT,EAAa;AACrBF,IAAAA,KAAK,CAACe,IAAN,CAAW,8BAAX,EAA2Cb,MAA3C,EAAmDc,IAAnD,CAAwDC,GAAG,IAAI;AAC3DC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAFD;AAGH;;AAnByB,CAAD,CAAV,CAoBhBhB,KApBgB,CAAnB;AAqBAiB,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+Bf,UAA/B;AACA,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\n\nconst Forms = ({ values}) => {\n    return (\n       \n       <div className=\"form\">\n        <Form>\n            <Field type=\"text\" name=\"name\" placeholder=\"Name\" />\n            <Field type=\"text\" name=\"email\" placeholder=\"Email\" />\n            <Field type=\"text\" name=\"password\" palceholder=\"Password\" />\n\n            \n            <label>\n                Terms of Service\n                <Field\n                    type=\"checkbox\"\n                    name=\"termsOfService\"\n                    checked={values.termsOfService}\n                />\n            </label>\n            <button>Submit</button>\n        </Form>\n       </div>\n     \n    );\n};\n\n\n    const FormikForm = withFormik({\n        mapPropsToValues({ name, email, password, termsOfService }) {\n            return {\n                name: name || \"\",\n                email: email || \"\",\n                password: password || \"\",\n                termsOfService: termsOfService || false,\n            };\n        },\n        validationSchema: Yup.object().shape({\n            name: Yup.string().required(\"You must put a name, dude\"),\n            email: Yup.string().required(\"input that email, please!\"),\n            password:Yup.string().required(\"Come on! You need to put in a password\")\n        }),\n\n        handleSubmit(values, {}) {\n            axios.post(\" https://reqres.in/api/users\", values).then(res => {\n                console.log(res);\n            });\n        }\n    })(Forms);\n    console.log(\"This is the HOC\", FormikForm)\n    export default FormikForm;"]},"metadata":{},"sourceType":"module"}